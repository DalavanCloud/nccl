##############################
## Purpose:
##   generate a html report of code coverage.
## Usage:
##   In trunk dir, run
##   make -f makes/gcov.mk
## Notice:
##   the tests should be run on different GPU models.
##   so before run this makefile, run all the tests.
## Note:
##   lcov can call gcov automatically.
##   only gcov can generate branch probabilities.
##############################
# the dirs where "make" was executed.
SRCDIRS := src
#	test/apitest \
#	test/single \
#	test/mpi
# the dirs contain the object files.
src_OBJDIR := build/obj
# test/apitest_OBJDIR := build/test/apitest
# test/single_OBJDIR := build/test/single
# test/mpi_OBJDIR := build/test/mpi
PACK_FILE := coverage/nccl.tar.xz
##############################
OBJDIRS := $(foreach D,${SRCDIRS},${${D}_OBJDIR})
# the gcda files, generated by running the test programs.
GCDA_FILES := $(wildcard ${OBJDIRS:%=%/*.gcda})
LCOV_FILES := $(SRCDIRS:%=coverage/%.info)
HTML_FILE := coverage/html/index.html
##########
all:${PACK_FILE} gcovs
########## gcov
THISDIR := $(shell pwd)
gcovs:$(GCDA_FILES:%=%.gcov)
# lcov will delete all .gcov files, so generate them after lcov.
define GCOV_TEMPLATE
${${1}_OBJDIR}/%.gcov:${LCOV_FILES}
	gcov --branch-probabilities --function-summaries --object-directory=${THISDIR}/${${1}_OBJDIR} ${${1}_OBJDIR}/$$* >/dev/null
endef
$(foreach D,${SRCDIRS},$(eval $(call GCOV_TEMPLATE,${D})))
########## lcov
coverage/%.info:${GCDA_FILES}
	mkdir -p $(dir $@) && lcov --base-directory=$* --capture --directory ${$*_OBJDIR} --rc lcov_branch_coverage=1 --output-file $@
##
${HTML_FILE}:${LCOV_FILES}
	genhtml --branch-coverage --demangle-cpp --function-coverage --ignore-errors source --legend --output-directory $(dir ${HTML_FILE}) $^
########## pack
${PACK_FILE}:${HTML_FILE}
	tar -f coverage/tensorRT.tar.xz -ac $(dir ${HTML_FILE})
